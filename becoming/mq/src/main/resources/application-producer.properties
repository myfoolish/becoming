server.port=8001
server.servlet.context-path=/producer

# Springboot 整合 kafka
spring.kafka.bootstrap-servers=192.168.36.66:10010,192.168.36.67:10010,192.168.36.68:10010
spring.kafka.admin.client-id=kafka_demo
# kafka producer 发送消息失败时的重试次数
spring.kafka.producer.retries=0
# kafka producer 批量发送数据的大小
spring.kafka.producer.batch-size=163840
# kafka producer 内存缓存区的大小（32M）
spring.kafka.producer.buffer-memory=33554432
# kafka producer 消息的序列化配置
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# acks=0    生产者在成功写入消息之前不会等待任何来自服务器的响应。
# acks=1    只要集群的首领节点收到消息，生产者就会收到一个来自服务器的成功响应。
# acks=-1   表示分区leader必须等待消息被成功写入到所有的ISR副本（同步副本）中才认为producer请求成功。这种方案提供最高的消息可靠性（持久性） 保证，但是理论上吞吐量也是最差的。
spring.kafka.producer.acks=1