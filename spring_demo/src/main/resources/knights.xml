<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:content="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
">

    <bean id="knight" class="com.xw.springinaction.knights.BraveKnight">
        <constructor-arg ref="quest"/>  <!-- 注入 quest -->
    </bean>

    <bean id="quest" class="com.xw.springinaction.knights.SlayDragonQuest">     <!-- 创建 SlayDragonQuest-->
        <constructor-arg value="#{T(System).out}"/>
    </bean>

    <bean id="minstrel" class="com.xw.springinaction.knights.Minstrel">
        <constructor-arg value="#{T(System).out}"/>
    </bean>

    <!--
     * 切面表达式：execution(* com.xw.service.impl..*.*(..))
     *  execution 代表所要执行的表达式主体
     *      第一处 * 代表方法返回类型，* 代表所有类型
     *      第二处 包名代表 aop 所监控的类所在的包
     *      第三处 .. 代表该包以及其子包下的所有类方法
     *      第四处 * 代表类名，* 代表所有类
     *      第五处 *(..) * 代表类中的方法名，(..) 表示方法中的任何参数
      -->
    <aop:config>
        <aop:aspect ref="minstrel">
            <aop:pointcut id="embark" expression="execution(* com.xw.springinaction.knights.BraveKnight.embark(..))"/>   <!-- 定义切入点 -->
            <aop:before method="singBeforeQuest" pointcut-ref="embark"/>    <!-- 声明前置通知 -->
            <aop:after method="singAfterQuest" pointcut-ref="embark"/>  <!-- 声明后置通知 -->
        </aop:aspect>
    </aop:config>

    <!-- 启用组件扫描 同等于 com.xw.springinaction.soundsystem.config.CDPlayerConfig -->
<!--    <content:component-scan base-package="com.xw.springinaction.soundsystem"/>-->
</beans>